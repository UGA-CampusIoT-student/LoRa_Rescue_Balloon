#!/bin/bash

boards="WIPY LOPY SIPY GPY FIPY LOPY4"

function usage() {
  echo "Usage:"
  echo " $0 board version-code stable|development"
  echo ""
  echo "where board in $boards and version-code is a tag for output file"
  echo ""
  exit 1
}

function prepare_dev() {
  echo "Usage $0 board version-code"
  echo "where board in $boards and version-code is a tag for output file"

  cd /opt/pycom-esp-idf
  git checkout  -b idf_dev
  git submodule update --init

  cd /opt/pycom-micropython-sigfox
  git checkout -b development
  git submodule update --init

  cd /opt/pycom-micropython-sigfox/esp32

}

function build() {
  BOARD=$1
  PROJECT=$2
  export PATH=$PATH:/opt/xtensa-esp32-elf/bin/
  export IDF_PATH=/opt/pycom-esp-idf
  board=`echo "$BOARD" | tr '[:upper:]' '[:lower:]'`
  cd /opt/pycom-micropython-sigfox/esp32/ &&
  make clean &&
  make BOARD=$BOARD TARGET=boot &&
  make BOARD=$BOARD TARGET=app &&
  rm /opt/pycom-micropython-sigfox/esp32/frozen/Common/* &&
  cp /opt/frozen/*.py /opt/pycom-micropython-sigfox/esp32/frozen/Common/ &&
  cd ../esp32/build/$BOARD/release &&
  mkdir -p firmware_package &&
  cd firmware_package/ &&
  cp ../bootloader/bootloader.bin . &&
  cp ../application.elf appimg.bin &&
  cp ../lib/partitions.bin . &&
  cp ../../../../boards/$BOARD/$BOARD/script . &&
  cp ../$board.bin . &&
  tar -czvf /opt/frozen/$board-firmware-$PROJECT.tar.gz appimg.bin  bootloader.bin   partitions.bin   script $board.bin &&
  echo "Firmware ready /opt/frozen/$board-firmware-$PROJECT.tar.gz"
}

[[ "stable development" =~ (^|[[:space:]])$3($|[[:space:]]) ]] &&
  echo "build target $3" ||
  usage

[[ $boards =~ (^|[[:space:]])$1($|[[:space:]]) ]] &&
  build  $1 $2 ||
  usage
